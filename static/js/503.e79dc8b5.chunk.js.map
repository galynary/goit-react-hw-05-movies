{"version":3,"file":"static/js/503.e79dc8b5.chunk.js","mappings":"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","sources":["api/fetchAPI.js","components/CastList/CastList.styled.js","components/CastList/CastList.jsx","pages/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = 'e7b77a04616bbe4184f610c6f41bfdf9';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst showToast = message => {\n  if (!toast.isActive('notification')) {\n    toast(message, { toastId: 'notification' });\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    showToast('Something went wrong');\n  }\n};\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    if (response.data.results.length === 0) {\n      showToast('Oops...There are no such movies!');\n    }\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    showToast('Something went wrong');\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    showToast('Something went wrong');\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    if (response.data.cast.length === 0) {\n      showToast('Oops...There are no casts');\n    }\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n    showToast('Something went wrong');\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    if (response.data.results.length === 0) {\n      showToast('Oops...There are no reviews');\n    }\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    showToast('Something went wrong');\n  }\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 16px;\n    list-style: none; \n    padding: 0;\n`;\n\nexport const Item = styled.li`\n    flex-basis: calc((100% - 7 * 16px) / 8);\n`;\n\nexport const Image = styled.img`\n  width: 140px;\n    height: 140px;\n    margin-bottom: 16px;\n    object-fit: cover;\n`;\n\nexport const Name = styled.p`\n  font-weight: 700;\n  padding: 0 10px;\n  font-size: 12px;\n`;\n\nexport const Character = styled.div`\n  padding: 0 10px;\n  font-size: 10px;\n  p {\n    font-weight: 700;\n    font-size: 12px;\n  }\n`;","import { Character, Name, Image, List, Item } from './CastList.styled';\nimport defaultPicture from '../../images/no-image.jpg';\nimport PropTypes from 'prop-types';\n\nexport const CastList = ({ cast }) => {\n  return (\n    <List>\n      {cast.map(({ profile_path, cast_id, name, character }) => {\n        return (\n          <Item key={cast_id}>\n            <Image\n              src={\n                profile_path !== null\n                  ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                  : defaultPicture\n              }\n              alt={name}\n            />\n            <Name>{name}</Name>\n            <Character>\n              Character: <p>{character}</p>\n            </Character>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      profile_path: PropTypes.string,\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieCredits } from 'api/fetchAPI';\nimport { CastList } from 'components/CastList/CastList';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState();\n  const [error, setError] = useState('');\n  const [onLoad, setOnLoad] = useState(false);\n \n \n  useEffect(() => {\n    setOnLoad(true);\n    const fetchMovieCast = async () => {\n      try {\n        const data = await fetchMovieCredits(movieId);\n        setMovieCast(data);\n      } catch (error) {\n        setError('Something wrong');\n      } finally { \n        setOnLoad(false);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  return <>\n    { onLoad && <Loader />}\n    {movieCast && <CastList cast={movieCast} />}\n    {error && <div>{toast(error)}</div>}\n  </>;\n};\n\nexport default Cast;\n\n\n"],"names":["API_KEY","BASE_URL","showToast","message","toast","toastId","fetchTrendingMovies","axios","response","data","results","console","error","fetchSearchMovies","query","length","log","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews","List","styled","Item","Image","Name","Character","CastList","map","profile_path","cast_id","name","character","src","defaultPicture","alt","useParams","useState","movieCast","setMovieCast","setError","onLoad","setOnLoad","useEffect","fetchMovieCast","Loader"],"sourceRoot":""}