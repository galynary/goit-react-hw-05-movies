{"version":3,"file":"static/js/549.f745cba6.chunk.js","mappings":"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","sources":["api/fetchAPI.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = 'e7b77a04616bbe4184f610c6f41bfdf9';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst showToast = message => {\n  if (!toast.isActive('notification')) {\n    toast(message, { toastId: 'notification' });\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    showToast('Something went wrong');\n  }\n};\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    if (response.data.results.length === 0) {\n      showToast('Oops...There are no such movies!');\n    }\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    showToast('Something went wrong');\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    showToast('Something went wrong');\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    if (response.data.cast.length === 0) {\n      showToast('Oops...There are no casts');\n    }\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n    showToast('Something went wrong');\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    if (response.data.results.length === 0) {\n      showToast('Oops...There are no reviews');\n    }\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    showToast('Something went wrong');\n  }\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  @media only screen and (min-width: 1200px) {\n    gap: 50px;\n    flex-direction: row;\n  }\n  > img { \n    height: 200px;\n    @media only screen and (min-width: 1200px) {\n    height: 500px;\n}\n  }\n`;\n\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  \n@media only screen and (min-width: 1200px) {\n    max-width: 50%; \n}\n`;\n\nexport const BackButton = styled(NavLink)`\n  align-items: center;\n  gap: 8px;\n  color: white;\n  text-decoration: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: 2px solid orangered;\n  margin-bottom: 10px;\n  display: block;\n  width: 100px;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: 2px solid orangered;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  max-width: 150px;\n  text-align: center;\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\n\n\n// @media only screen and (min-width: 320px) {\n//     flex-basis: 100%;\n//   }\n  \n//   @media only screen and (min-width: 760px) {\n//     flex-basis: 40%;\n//   }\n  \n//   @media only screen and (min-width: 1200px) {\n//     flex-basis: calc((100% - 50px) / 5);\n//   }","import React from 'react';\nimport { Container, Content, Link } from './MovieInfo.styled';\nimport defaultPicture from '../../images/no-image.jpg';\nimport PropTypes from 'prop-types';\n\nconst MovieInfo = ({ movie, backPath }) => {\n  const { poster_path, title, vote_average, genres, overview } = movie;\n\n  return (\n    <Container>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n            : defaultPicture\n        }\n        alt={title}\n      />\n      <Content>\n        <h1>{title}</h1>\n        <p>Rating: {vote_average.toFixed(1)}</p>\n        <p>Genres: {genres.map(genre => genre.name).join(', ')}</p>\n        <p>{overview}</p>\n        <Link to=\"cast\" state={{ from: backPath }}>\n          Cast\n        </Link>\n        <Link to=\"reviews\" state={{ from: backPath }}>\n          Reviews\n        </Link>\n      </Content>\n    </Container>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.array,\n    overview: PropTypes.string,\n  }).isRequired,\n  backPath: PropTypes.object.isRequired,\n};\n\nexport default MovieInfo;\n","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, useLocation, Outlet} from 'react-router-dom';\nimport { fetchMovieDetails } from 'api/fetchAPI';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport { BackButton } from 'components/MovieInfo/MovieInfo.styled';\nimport { Loader } from \"components/Loader/Loader\";\nimport { toast } from 'react-toastify';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [onLoad, setOnLoad] = useState(false);\n  const [error, setError] = useState(''); \n\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n\n  useEffect(() => {\n    setOnLoad(true);\n    const getMovieDetails = async () => {\n      try {\n        const data = await fetchMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError('Something wrong');\n      } finally { \n        setOnLoad(false);\n      }\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n    return (\n        <main>\n        {onLoad && <Loader />}\n        {error && <div>{toast(error)}</div>}\n          {movie && (\n            <>\n            <BackButton to={backLink}>Go back</BackButton>\n            <MovieInfo movie={movie} backPath={backLink} />\n            </>\n          )}\n    \n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </main>\n      );\n\n}\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","showToast","message","toast","toastId","fetchTrendingMovies","axios","response","data","results","console","error","fetchSearchMovies","query","length","log","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews","Container","styled","Content","BackButton","NavLink","Link","movie","backPath","poster_path","title","vote_average","genres","overview","src","defaultPicture","alt","toFixed","map","genre","name","join","to","state","from","useParams","useState","setMovie","onLoad","setOnLoad","setError","backLink","useLocation","useEffect","getMovieDetails","Loader","Suspense","fallback"],"sourceRoot":""}