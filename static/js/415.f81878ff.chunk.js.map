{"version":3,"file":"static/js/415.f81878ff.chunk.js","mappings":"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","sources":["api/fetchAPI.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = 'e7b77a04616bbe4184f610c6f41bfdf9';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst showToast = message => {\n  if (!toast.isActive('notification')) {\n    toast(message, { toastId: 'notification' });\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    showToast('Something went wrong');\n  }\n};\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    if (response.data.results.length === 0) {\n      showToast('Oops...There are no such movies!');\n    }\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    showToast('Something went wrong');\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    showToast('Something went wrong');\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    if (response.data.cast.length === 0) {\n      showToast('Oops...There are no casts');\n    }\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n    showToast('Something went wrong');\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    if (response.data.results.length === 0) {\n      showToast('Oops...There are no reviews');\n    }\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    showToast('Something went wrong');\n  }\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 60px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n`;\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: calc((100% - 50px) / 5);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.02);\n  }\n  > a {\n    text-decoration: none;\n  }\n  img {\n    height: 360px;\n    border-radius: 6px;\n    width: 100%;\n    object-fit: cover;\n    box-shadow: 0px 4px 7px rgba(0, 0, 0, 0.35);\n  }\n\n  @media only screen and (min-width: 320px) {\n    flex-basis: 100%;\n  }\n\n  @media only screen and (min-width: 760px) {\n    flex-basis: 40%;\n  }\n\n  @media only screen and (min-width: 1200px) {\n    flex-basis: calc((100% - 50px) / 5);\n  }\n`;\n\nexport const MovieName = styled.p`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: #272020;\n  text-align: center;\n`;\n","import { CardWrapper, Container, MovieName } from './MovieList.styled';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultPicture from '../../images/no-image.jpg';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(({ poster_path, title, id }) => {\n        return (\n          <CardWrapper key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={\n                  poster_path !== null\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : defaultPicture\n                }\n                alt={title}\n              />\n              <MovieName>{title}</MovieName>\n            </Link>\n          </CardWrapper>\n        );\n      })}\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport { fetchTrendingMovies } from \"api/fetchAPI\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { MoviesList } from \"components/MovieList/MovieList\";\nimport { toast } from 'react-toastify';\n\nconst TrendingMovies = () => {\n\n    const [trendingFilms, setTrendingFilms] = useState(null);\n    const [onLoad, setOnLoad] = useState(false);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n      setOnLoad(true);\n      const renderTrendingMovies = async () => {\n        try {\n          const data = await fetchTrendingMovies();\n          setTrendingFilms(data);\n        } catch (error) {\n          setError('Something wrong');\n        } finally { \n          setOnLoad(false);\n        }\n      };\n      renderTrendingMovies();\n    }, []);\n  \n  \n    return (\n      <main>\n        {onLoad && <Loader />}\n        {error && <div>{toast(error)}</div>}\n        {trendingFilms && <MoviesList movies={trendingFilms} />}\n      </main>\n    );\n  };\n\nexport default TrendingMovies;\n  "],"names":["API_KEY","BASE_URL","showToast","message","toast","toastId","fetchTrendingMovies","axios","response","data","results","console","error","fetchSearchMovies","query","length","log","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews","Container","styled","CardWrapper","MovieName","MoviesList","movies","location","useLocation","map","poster_path","title","id","to","state","from","src","defaultPicture","alt","useState","trendingFilms","setTrendingFilms","onLoad","setOnLoad","setError","useEffect","renderTrendingMovies"],"sourceRoot":""}